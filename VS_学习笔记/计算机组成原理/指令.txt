4404 -- addi指令，向0号寄存器存入1号寄存器的值+0x04即4
4004 -- addi指令，向0号寄存器存入0号寄存器的值+0x04即4
400A -- addi指令，向0号寄存器存入0号寄存器的值+0x0A即15
4D02 -- addi指令，向1号寄存器存入3号寄存器的值+0x02即2
0180 -- or指令，向2号寄存器存入$0 or $1 的值
0181 -- and指令，向2号寄存器存入$0 and $1 的值
0182 -- add指令，向2号寄存器存入$0 + $1 的值
0183 -- sub指令，向2号寄存器存入$0 - $1 的值
0184 -- sllv指令，向2号寄存器存入$0 << $1的值 逻辑左移
0185 -- srlv指令，向2号寄存器存入$0 >> $1的值 逻辑右移
0186 -- srav指令，向2号寄存器存入$0 >> $1的值 算术右移
0187 -- slt指令，向2号寄存器存入$0 < $1的逻辑真值
1301 -- lui指令，向3号寄存器存入 imm（1） << 8 的值
230F -- ori指令，向3号寄存器存入 $0 | imm（F）的值
3300 -- andi指令，向3号寄存器存入 $0 & imm（0）的值
**6100 -- sw指令，向RAM的第[$0 + imm(0)]写入 $1的值
**5200 -- lw指令，读取RAM的[$0 + imm（0）]并写入2号寄存器

08C2 -- add指令，向3号寄存器存入$2 + $0 的值

利用quartus对RAM进行监控

A002 --jump, 跳到第二条指令












4404 $0=4   4
4D02 $1=2   2
0180 $0|$1  $2=0110=6
0181 $0&$1  $2=0000=0
0182 $0+$1  $2=0110=6
0183 $0-$1  $2=0010=2
0184 $0<<$1 $2=010000=16=0x10
0185 $0>>$1 $2=0001=1
0186 $0<<$1 $2=1
0187 $0<$1  $2=0
1301 $3=1<<8=100000000=0x100
230F $3=$0 | imm（F）= F
3300 $3=$0 & imm（0）= 0
6100 RAM[$0+0]=RAM[4]=$1=2
5200 $1=RAM[$0+0]=RAM[4]=2--WAITING需要一个时钟的延迟
5200 $1完成写入
08C2 $0+$2=6
B000 时钟暂停
